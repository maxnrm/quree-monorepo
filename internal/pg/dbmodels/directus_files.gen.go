// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package dbmodels

import (
	"time"
)

const TableNameFile = "directus_files"

// File mapped from table <directus_files>
type File struct {
	ID               string    `gorm:"column:id;type:uuid;primaryKey" json:"id"`
	Storage          string    `gorm:"column:storage;type:character varying(255);not null" json:"storage"`
	FilenameDisk     *string   `gorm:"column:filename_disk;type:character varying(255)" json:"filename_disk"`
	FilenameDownload string    `gorm:"column:filename_download;type:character varying(255);not null" json:"filename_download"`
	Title            *string   `gorm:"column:title;type:character varying(255)" json:"title"`
	Type             *string   `gorm:"column:type;type:character varying(255)" json:"type"`
	Folder           *string   `gorm:"column:folder;type:uuid" json:"folder"`
	UploadedBy       *string   `gorm:"column:uploaded_by;type:uuid" json:"uploaded_by"`
	UploadedOn       time.Time `gorm:"column:uploaded_on;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP" json:"uploaded_on"`
	ModifiedBy       *string   `gorm:"column:modified_by;type:uuid" json:"modified_by"`
	ModifiedOn       time.Time `gorm:"column:modified_on;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP" json:"modified_on"`
	Charset          *string   `gorm:"column:charset;type:character varying(50)" json:"charset"`
	Filesize         *int64    `gorm:"column:filesize;type:bigint" json:"filesize"`
	Width            *int32    `gorm:"column:width;type:integer" json:"width"`
	Height           *int32    `gorm:"column:height;type:integer" json:"height"`
	Duration         *int32    `gorm:"column:duration;type:integer" json:"duration"`
	Embed            *string   `gorm:"column:embed;type:character varying(200)" json:"embed"`
	Description      *string   `gorm:"column:description;type:text" json:"description"`
	Location         *string   `gorm:"column:location;type:text" json:"location"`
	Tag              *string   `gorm:"column:tags;type:text" json:"tags"`
	Metadatum        *string   `gorm:"column:metadata;type:json" json:"metadata"`
}

// TableName File's table name
func (*File) TableName() string {
	return TableNameFile
}
